方法：
1.利用文件进行进程间的通信：进程A终止前将输出值写入这个文件，然后进程B再将这个文件的内容作为输入值读取进来，开始运行，这是进程间通信的一种常见方法；实际上，一段内存的共享也是通过将一个共享的文件同事映射到两个进程的地址空间实现的。

2.信号：信号类似于异常和中断，是异步的；进程在接到信号后在内核态通过对应的信号处理函数处理该信号。


匿名管道
系统调用：
#include <unistd.h>
int pipe(int pipefd[2]);
匿名管道是一个单项的数据传输通道，他的两端分别时两个文件描述符，一段的文件描述符只能被用于读取数据，而另一端只能被用于写入数据。pipe()系统调用成功执行时会返回0，并将传入的数组的第一个元素改为用于读取数据的文件描述符，第二个元素改为用于写入数据的文件描述符；如果系统调用失败，则返回-1.
局限性：
匿名管道两端的进程必须具有共同的祖先，它们从同一个祖先集成了通用的文件描述符，因此他们的文件描述符指向同一个文件。


命名管道（先进先出策略)
#include<sys/types.h>
#include<sys/stat.h>
int mkfifo(const char* pathname, mode_t mode);
mode表示这个管道的权限可以被umask命令修改。
命名管道自创建以后就可以被任何进程像使用一般文件那样使用；即使创建管道的进程已经退出，但管道仍然存在，只有在被删除后才会消失

